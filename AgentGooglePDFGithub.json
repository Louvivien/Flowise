{
    "nodes": [
        {
            "width": 300,
            "height": 385,
            "id": "conversationalAgent_0",
            "position": {
                "x": 473.22059705171193,
                "y": 1493.2252097214518
            },
            "type": "customNode",
            "data": {
                "id": "conversationalAgent_0",
                "label": "Conversational Agent",
                "name": "conversationalAgent",
                "type": "AgentExecutor",
                "baseClasses": [
                    "AgentExecutor",
                    "BaseChain",
                    "BaseLangChain"
                ],
                "category": "Agents",
                "description": "Conversational agent for a chat model. It will utilize chat specific prompts",
                "inputParams": [
                    {
                        "label": "System Message",
                        "name": "systemMessage",
                        "type": "string",
                        "rows": 4,
                        "optional": true,
                        "additionalParams": true,
                        "id": "conversationalAgent_0-input-systemMessage-string"
                    },
                    {
                        "label": "Human Message",
                        "name": "humanMessage",
                        "type": "string",
                        "rows": 4,
                        "optional": true,
                        "additionalParams": true,
                        "id": "conversationalAgent_0-input-humanMessage-string"
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Allowed Tools",
                        "name": "tools",
                        "type": "Tool",
                        "list": true,
                        "id": "conversationalAgent_0-input-tools-Tool"
                    },
                    {
                        "label": "Chat Model",
                        "name": "model",
                        "type": "BaseChatModel",
                        "id": "conversationalAgent_0-input-model-BaseChatModel"
                    },
                    {
                        "label": "Memory",
                        "name": "memory",
                        "type": "BaseChatMemory",
                        "id": "conversationalAgent_0-input-memory-BaseChatMemory"
                    }
                ],
                "inputs": {
                    "tools": [
                        "{{serpAPI_0.data.instance}}",
                        "{{chainTool_0.data.instance}}"
                    ],
                    "model": "{{chatOpenAI_0.data.instance}}",
                    "memory": "{{bufferMemory_0.data.instance}}",
                    "systemMessage": "",
                    "humanMessage": ""
                },
                "outputAnchors": [
                    {
                        "id": "conversationalAgent_0-output-conversationalAgent-AgentExecutor|BaseChain|BaseLangChain",
                        "name": "conversationalAgent",
                        "label": "AgentExecutor",
                        "type": "AgentExecutor | BaseChain | BaseLangChain"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "selected": false,
            "positionAbsolute": {
                "x": 473.22059705171193,
                "y": 1493.2252097214518
            },
            "dragging": false
        },
        {
            "width": 300,
            "height": 279,
            "id": "serpAPI_0",
            "position": {
                "x": 360.6713600000001,
                "y": 43.301600000000136
            },
            "type": "customNode",
            "data": {
                "id": "serpAPI_0",
                "label": "Serp API",
                "name": "serpAPI",
                "type": "SerpAPI",
                "baseClasses": [
                    "SerpAPI",
                    "Tool",
                    "StructuredTool",
                    "BaseLangChain"
                ],
                "category": "Tools",
                "description": "Wrapper around SerpAPI - a real-time API to access Google search results",
                "inputParams": [
                    {
                        "label": "Serp Api Key",
                        "name": "apiKey",
                        "type": "password",
                        "id": "serpAPI_0-input-apiKey-password"
                    }
                ],
                "inputAnchors": [],
                "inputs": {},
                "outputAnchors": [
                    {
                        "id": "serpAPI_0-output-serpAPI-SerpAPI|Tool|StructuredTool|BaseLangChain",
                        "name": "serpAPI",
                        "label": "SerpAPI",
                        "type": "SerpAPI | Tool | StructuredTool | BaseLangChain"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "selected": false,
            "dragging": false,
            "positionAbsolute": {
                "x": 360.6713600000001,
                "y": 43.301600000000136
            }
        },
        {
            "width": 300,
            "height": 526,
            "id": "chatOpenAI_0",
            "position": {
                "x": -8.116667694766562,
                "y": 27.381339647374233
            },
            "type": "customNode",
            "data": {
                "id": "chatOpenAI_0",
                "label": "ChatOpenAI",
                "name": "chatOpenAI",
                "type": "ChatOpenAI",
                "baseClasses": [
                    "ChatOpenAI",
                    "BaseChatModel",
                    "BaseLanguageModel",
                    "BaseLangChain"
                ],
                "category": "Chat Models",
                "description": "Wrapper around OpenAI large language models that use the Chat endpoint",
                "inputParams": [
                    {
                        "label": "OpenAI Api Key",
                        "name": "openAIApiKey",
                        "type": "password",
                        "id": "chatOpenAI_0-input-openAIApiKey-password"
                    },
                    {
                        "label": "Model Name",
                        "name": "modelName",
                        "type": "options",
                        "options": [
                            {
                                "label": "gpt-4",
                                "name": "gpt-4"
                            },
                            {
                                "label": "gpt-4-0314",
                                "name": "gpt-4-0314"
                            },
                            {
                                "label": "gpt-4-32k-0314",
                                "name": "gpt-4-32k-0314"
                            },
                            {
                                "label": "gpt-3.5-turbo",
                                "name": "gpt-3.5-turbo"
                            },
                            {
                                "label": "gpt-3.5-turbo-0301",
                                "name": "gpt-3.5-turbo-0301"
                            }
                        ],
                        "default": "gpt-3.5-turbo",
                        "optional": true,
                        "id": "chatOpenAI_0-input-modelName-options"
                    },
                    {
                        "label": "Temperature",
                        "name": "temperature",
                        "type": "number",
                        "default": 0.9,
                        "optional": true,
                        "id": "chatOpenAI_0-input-temperature-number"
                    },
                    {
                        "label": "Max Tokens",
                        "name": "maxTokens",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-maxTokens-number"
                    },
                    {
                        "label": "Top Probability",
                        "name": "topP",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-topP-number"
                    },
                    {
                        "label": "Frequency Penalty",
                        "name": "frequencyPenalty",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-frequencyPenalty-number"
                    },
                    {
                        "label": "Presence Penalty",
                        "name": "presencePenalty",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-presencePenalty-number"
                    },
                    {
                        "label": "Timeout",
                        "name": "timeout",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-timeout-number"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "modelName": "gpt-3.5-turbo",
                    "temperature": 0.9,
                    "maxTokens": "",
                    "topP": "",
                    "frequencyPenalty": "",
                    "presencePenalty": "",
                    "timeout": ""
                },
                "outputAnchors": [
                    {
                        "id": "chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|BaseLangChain",
                        "name": "chatOpenAI",
                        "label": "ChatOpenAI",
                        "type": "ChatOpenAI | BaseChatModel | BaseLanguageModel | BaseLangChain"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "selected": false,
            "positionAbsolute": {
                "x": -8.116667694766562,
                "y": 27.381339647374233
            },
            "dragging": false
        },
        {
            "width": 300,
            "height": 378,
            "id": "bufferMemory_0",
            "position": {
                "x": -371.4751906071959,
                "y": 22.097677723009923
            },
            "type": "customNode",
            "data": {
                "id": "bufferMemory_0",
                "label": "Buffer Memory",
                "name": "bufferMemory",
                "type": "BufferMemory",
                "baseClasses": [
                    "BufferMemory",
                    "BaseChatMemory",
                    "BaseMemory"
                ],
                "category": "Memory",
                "description": "Remembers previous conversational back and forths directly",
                "inputParams": [
                    {
                        "label": "Memory Key",
                        "name": "memoryKey",
                        "type": "string",
                        "default": "chat_history",
                        "id": "bufferMemory_0-input-memoryKey-string"
                    },
                    {
                        "label": "Input Key",
                        "name": "inputKey",
                        "type": "string",
                        "default": "input",
                        "id": "bufferMemory_0-input-inputKey-string"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "memoryKey": "chat_history",
                    "inputKey": "input"
                },
                "outputAnchors": [
                    {
                        "id": "bufferMemory_0-output-bufferMemory-BufferMemory|BaseChatMemory|BaseMemory",
                        "name": "bufferMemory",
                        "label": "BufferMemory",
                        "type": "BufferMemory | BaseChatMemory | BaseMemory"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "selected": false,
            "positionAbsolute": {
                "x": -371.4751906071959,
                "y": 22.097677723009923
            },
            "dragging": false
        },
        {
            "width": 300,
            "height": 281,
            "id": "retrievalQAChain_0",
            "position": {
                "x": 1961.7823771974827,
                "y": 172.06489195576668
            },
            "type": "customNode",
            "data": {
                "id": "retrievalQAChain_0",
                "label": "RetrievalQA Chain",
                "name": "retrievalQAChain",
                "type": "RetrievalQAChain",
                "baseClasses": [
                    "RetrievalQAChain",
                    "BaseChain",
                    "BaseLangChain"
                ],
                "category": "Chains",
                "description": "QA chain to answer a question based on the retrieved documents",
                "inputParams": [],
                "inputAnchors": [
                    {
                        "label": "LLM",
                        "name": "llm",
                        "type": "BaseLLM",
                        "id": "retrievalQAChain_0-input-llm-BaseLLM"
                    },
                    {
                        "label": "Vector Store Retriever",
                        "name": "vectorStoreRetriever",
                        "type": "BaseRetriever",
                        "id": "retrievalQAChain_0-input-vectorStoreRetriever-BaseRetriever"
                    }
                ],
                "inputs": {
                    "llm": "{{openAI_0.data.instance}}",
                    "vectorStoreRetriever": "{{pineconeUpsert_0.data.instance}}"
                },
                "outputAnchors": [
                    {
                        "id": "retrievalQAChain_0-output-retrievalQAChain-RetrievalQAChain|BaseChain|BaseLangChain",
                        "name": "retrievalQAChain",
                        "label": "RetrievalQAChain",
                        "type": "RetrievalQAChain | BaseChain | BaseLangChain"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "selected": false,
            "dragging": false,
            "positionAbsolute": {
                "x": 1961.7823771974827,
                "y": 172.06489195576668
            }
        },
        {
            "width": 300,
            "height": 703,
            "id": "pineconeUpsert_0",
            "position": {
                "x": 2284.7153305422416,
                "y": 617.5940809073968
            },
            "type": "customNode",
            "data": {
                "id": "pineconeUpsert_0",
                "label": "Pinecone Upsert Document",
                "name": "pineconeUpsert",
                "type": "Pinecone",
                "baseClasses": [
                    "Pinecone",
                    "VectorStoreRetriever",
                    "BaseRetriever"
                ],
                "category": "Vector Stores",
                "description": "Upsert documents to Pinecone",
                "inputParams": [
                    {
                        "label": "Pinecone Api Key",
                        "name": "pineconeApiKey",
                        "type": "password",
                        "id": "pineconeUpsert_0-input-pineconeApiKey-password"
                    },
                    {
                        "label": "Pinecone Environment",
                        "name": "pineconeEnv",
                        "type": "string",
                        "id": "pineconeUpsert_0-input-pineconeEnv-string"
                    },
                    {
                        "label": "Pinecone Index",
                        "name": "pineconeIndex",
                        "type": "string",
                        "id": "pineconeUpsert_0-input-pineconeIndex-string"
                    },
                    {
                        "label": "Pinecone Namespace",
                        "name": "pineconeNamespace",
                        "type": "string",
                        "placeholder": "my-first-namespace",
                        "optional": true,
                        "id": "pineconeUpsert_0-input-pineconeNamespace-string"
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Document",
                        "name": "document",
                        "type": "Document",
                        "list": true,
                        "id": "pineconeUpsert_0-input-document-Document"
                    },
                    {
                        "label": "Embeddings",
                        "name": "embeddings",
                        "type": "Embeddings",
                        "id": "pineconeUpsert_0-input-embeddings-Embeddings"
                    }
                ],
                "inputs": {
                    "document": [
                        "{{pdfFile_1.data.instance}}"
                    ],
                    "embeddings": "{{openAIEmbeddings_0.data.instance}}",
                    "pineconeEnv": "asia-southeast1-gcp",
                    "pineconeIndex": "doc-chat",
                    "pineconeNamespace": "pdf"
                },
                "outputAnchors": [
                    {
                        "name": "output",
                        "label": "Output",
                        "type": "options",
                        "options": [
                            {
                                "id": "pineconeUpsert_0-output-retriever-Pinecone|VectorStoreRetriever|BaseRetriever",
                                "name": "retriever",
                                "label": "Pinecone Retriever",
                                "type": "Pinecone | VectorStoreRetriever | BaseRetriever"
                            },
                            {
                                "id": "pineconeUpsert_0-output-vectorStore-Pinecone|VectorStore",
                                "name": "vectorStore",
                                "label": "Pinecone Vector Store",
                                "type": "Pinecone | VectorStore"
                            }
                        ],
                        "default": "retriever"
                    }
                ],
                "outputs": {
                    "output": "retriever"
                },
                "selected": false
            },
            "selected": false,
            "positionAbsolute": {
                "x": 2284.7153305422416,
                "y": 617.5940809073968
            },
            "dragging": false
        },
        {
            "width": 300,
            "height": 526,
            "id": "openAI_0",
            "position": {
                "x": 2520.8438171585094,
                "y": -32.17191430195152
            },
            "type": "customNode",
            "data": {
                "id": "openAI_0",
                "label": "OpenAI",
                "name": "openAI",
                "type": "OpenAI",
                "baseClasses": [
                    "OpenAI",
                    "BaseLLM",
                    "BaseLanguageModel",
                    "BaseLangChain"
                ],
                "category": "LLMs",
                "description": "Wrapper around OpenAI large language models",
                "inputParams": [
                    {
                        "label": "OpenAI Api Key",
                        "name": "openAIApiKey",
                        "type": "password",
                        "id": "openAI_0-input-openAIApiKey-password"
                    },
                    {
                        "label": "Model Name",
                        "name": "modelName",
                        "type": "options",
                        "options": [
                            {
                                "label": "text-davinci-003",
                                "name": "text-davinci-003"
                            },
                            {
                                "label": "text-davinci-002",
                                "name": "text-davinci-002"
                            },
                            {
                                "label": "text-curie-001",
                                "name": "text-curie-001"
                            },
                            {
                                "label": "text-babbage-001",
                                "name": "text-babbage-001"
                            }
                        ],
                        "default": "text-davinci-003",
                        "optional": true,
                        "id": "openAI_0-input-modelName-options"
                    },
                    {
                        "label": "Temperature",
                        "name": "temperature",
                        "type": "number",
                        "default": 0.7,
                        "optional": true,
                        "id": "openAI_0-input-temperature-number"
                    },
                    {
                        "label": "Max Tokens",
                        "name": "maxTokens",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAI_0-input-maxTokens-number"
                    },
                    {
                        "label": "Top Probability",
                        "name": "topP",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAI_0-input-topP-number"
                    },
                    {
                        "label": "Best Of",
                        "name": "bestOf",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAI_0-input-bestOf-number"
                    },
                    {
                        "label": "Frequency Penalty",
                        "name": "frequencyPenalty",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAI_0-input-frequencyPenalty-number"
                    },
                    {
                        "label": "Presence Penalty",
                        "name": "presencePenalty",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAI_0-input-presencePenalty-number"
                    },
                    {
                        "label": "Batch Size",
                        "name": "batchSize",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAI_0-input-batchSize-number"
                    },
                    {
                        "label": "Timeout",
                        "name": "timeout",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAI_0-input-timeout-number"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "modelName": "text-davinci-003",
                    "temperature": 0.7,
                    "maxTokens": "",
                    "topP": "",
                    "bestOf": "",
                    "frequencyPenalty": "",
                    "presencePenalty": "",
                    "batchSize": "",
                    "timeout": ""
                },
                "outputAnchors": [
                    {
                        "id": "openAI_0-output-openAI-OpenAI|BaseLLM|BaseLanguageModel|BaseLangChain",
                        "name": "openAI",
                        "label": "OpenAI",
                        "type": "OpenAI | BaseLLM | BaseLanguageModel | BaseLangChain"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "selected": false,
            "positionAbsolute": {
                "x": 2520.8438171585094,
                "y": -32.17191430195152
            },
            "dragging": false
        },
        {
            "width": 300,
            "height": 456,
            "id": "pdfFile_1",
            "position": {
                "x": 3044.956252951725,
                "y": 819.5658814553295
            },
            "type": "customNode",
            "data": {
                "id": "pdfFile_1",
                "label": "Pdf File",
                "name": "pdfFile",
                "type": "Document",
                "baseClasses": [
                    "Document"
                ],
                "category": "Document Loaders",
                "description": "Load data from PDF files",
                "inputParams": [
                    {
                        "label": "Pdf File",
                        "name": "pdfFile",
                        "type": "file",
                        "fileType": ".pdf",
                        "id": "pdfFile_1-input-pdfFile-file"
                    },
                    {
                        "label": "Usage",
                        "name": "usage",
                        "type": "options",
                        "options": [
                            {
                                "label": "One document per page",
                                "name": "perPage"
                            },
                            {
                                "label": "One document per file",
                                "name": "perFile"
                            }
                        ],
                        "default": "perPage",
                        "id": "pdfFile_1-input-usage-options"
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Text Splitter",
                        "name": "textSplitter",
                        "type": "TextSplitter",
                        "optional": true,
                        "id": "pdfFile_1-input-textSplitter-TextSplitter"
                    }
                ],
                "inputs": {
                    "textSplitter": "{{recursiveCharacterTextSplitter_0.data.instance}}",
                    "usage": "perPage"
                },
                "outputAnchors": [
                    {
                        "id": "pdfFile_1-output-pdfFile-Document",
                        "name": "pdfFile",
                        "label": "Document",
                        "type": "Document"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "selected": false,
            "positionAbsolute": {
                "x": 3044.956252951725,
                "y": 819.5658814553295
            },
            "dragging": false
        },
        {
            "width": 300,
            "height": 378,
            "id": "recursiveCharacterTextSplitter_0",
            "position": {
                "x": 3342.9858024251484,
                "y": 200.4199864225125
            },
            "type": "customNode",
            "data": {
                "id": "recursiveCharacterTextSplitter_0",
                "label": "Recursive Character Text Splitter",
                "name": "recursiveCharacterTextSplitter",
                "type": "RecursiveCharacterTextSplitter",
                "baseClasses": [
                    "RecursiveCharacterTextSplitter",
                    "TextSplitter"
                ],
                "category": "Text Splitters",
                "description": "Split documents recursively by different characters - starting with \"\\n\\n\", then \"\\n\", then \" \"",
                "inputParams": [
                    {
                        "label": "Chunk Size",
                        "name": "chunkSize",
                        "type": "number",
                        "default": 1000,
                        "optional": true,
                        "id": "recursiveCharacterTextSplitter_0-input-chunkSize-number"
                    },
                    {
                        "label": "Chunk Overlap",
                        "name": "chunkOverlap",
                        "type": "number",
                        "optional": true,
                        "id": "recursiveCharacterTextSplitter_0-input-chunkOverlap-number"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "chunkSize": 1000,
                    "chunkOverlap": "40"
                },
                "outputAnchors": [
                    {
                        "id": "recursiveCharacterTextSplitter_0-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter",
                        "name": "recursiveCharacterTextSplitter",
                        "label": "RecursiveCharacterTextSplitter",
                        "type": "RecursiveCharacterTextSplitter | TextSplitter"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "selected": false,
            "dragging": false,
            "positionAbsolute": {
                "x": 3342.9858024251484,
                "y": 200.4199864225125
            }
        },
        {
            "width": 300,
            "height": 331,
            "id": "openAIEmbeddings_0",
            "position": {
                "x": 3612.4716767377377,
                "y": 878.3322714923426
            },
            "type": "customNode",
            "data": {
                "id": "openAIEmbeddings_0",
                "label": "OpenAI Embeddings",
                "name": "openAIEmbeddings",
                "type": "OpenAIEmbeddings",
                "baseClasses": [
                    "OpenAIEmbeddings",
                    "Embeddings"
                ],
                "category": "Embeddings",
                "description": "OpenAI API to generate embeddings for a given text",
                "inputParams": [
                    {
                        "label": "OpenAI Api Key",
                        "name": "openAIApiKey",
                        "type": "password",
                        "id": "openAIEmbeddings_0-input-openAIApiKey-password"
                    },
                    {
                        "label": "Strip New Lines",
                        "name": "stripNewLines",
                        "type": "boolean",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAIEmbeddings_0-input-stripNewLines-boolean"
                    },
                    {
                        "label": "Batch Size",
                        "name": "batchSize",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAIEmbeddings_0-input-batchSize-number"
                    },
                    {
                        "label": "Timeout",
                        "name": "timeout",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAIEmbeddings_0-input-timeout-number"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "stripNewLines": "",
                    "batchSize": "",
                    "timeout": ""
                },
                "outputAnchors": [
                    {
                        "id": "openAIEmbeddings_0-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings",
                        "name": "openAIEmbeddings",
                        "label": "OpenAIEmbeddings",
                        "type": "OpenAIEmbeddings | Embeddings"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "selected": false,
            "dragging": false,
            "positionAbsolute": {
                "x": 3612.4716767377377,
                "y": 878.3322714923426
            }
        },
        {
            "width": 300,
            "height": 603,
            "id": "chainTool_0",
            "position": {
                "x": 1526.0200175660023,
                "y": 753.3513914159878
            },
            "type": "customNode",
            "data": {
                "id": "chainTool_0",
                "label": "Chain Tool",
                "name": "chainTool",
                "type": "ChainTool",
                "baseClasses": [
                    "ChainTool",
                    "DynamicTool",
                    "Tool",
                    "StructuredTool",
                    "BaseLangChain"
                ],
                "category": "Tools",
                "description": "Use a chain as allowed tool for agent",
                "inputParams": [
                    {
                        "label": "Chain Name",
                        "name": "name",
                        "type": "string",
                        "placeholder": "state-of-union-qa",
                        "id": "chainTool_0-input-name-string"
                    },
                    {
                        "label": "Chain Description",
                        "name": "description",
                        "type": "string",
                        "rows": 3,
                        "placeholder": "State of the Union QA - useful for when you need to ask questions about the most recent state of the union address.",
                        "id": "chainTool_0-input-description-string"
                    },
                    {
                        "label": "Return Direct",
                        "name": "returnDirect",
                        "type": "boolean",
                        "optional": true,
                        "id": "chainTool_0-input-returnDirect-boolean"
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Base Chain",
                        "name": "baseChain",
                        "type": "BaseChain",
                        "id": "chainTool_0-input-baseChain-BaseChain"
                    }
                ],
                "inputs": {
                    "name": "pdf-tool",
                    "description": "PDF tool  - usefool to answer questions about PDF files",
                    "returnDirect": "",
                    "baseChain": "{{retrievalQAChain_0.data.instance}}"
                },
                "outputAnchors": [
                    {
                        "id": "chainTool_0-output-chainTool-ChainTool|DynamicTool|Tool|StructuredTool|BaseLangChain",
                        "name": "chainTool",
                        "label": "ChainTool",
                        "type": "ChainTool | DynamicTool | Tool | StructuredTool | BaseLangChain"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "selected": false,
            "positionAbsolute": {
                "x": 1526.0200175660023,
                "y": 753.3513914159878
            },
            "dragging": false
        },
        {
            "width": 300,
            "height": 527,
            "id": "github_0",
            "position": {
                "x": 1067.7226985408345,
                "y": 2451.3724483358374
            },
            "type": "customNode",
            "data": {
                "id": "github_0",
                "label": "Github",
                "name": "github",
                "type": "Document",
                "baseClasses": [
                    "Document"
                ],
                "category": "Document Loaders",
                "description": "Load data from a GitHub repository",
                "inputParams": [
                    {
                        "label": "Repo Link",
                        "name": "repoLink",
                        "type": "string",
                        "placeholder": "https://github.com/FlowiseAI/Flowise",
                        "id": "github_0-input-repoLink-string"
                    },
                    {
                        "label": "Branch",
                        "name": "branch",
                        "type": "string",
                        "default": "main",
                        "id": "github_0-input-branch-string"
                    },
                    {
                        "label": "Access Token",
                        "name": "accessToken",
                        "type": "password",
                        "placeholder": "<GITHUB_ACCESS_TOKEN>",
                        "optional": true,
                        "id": "github_0-input-accessToken-password"
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Text Splitter",
                        "name": "textSplitter",
                        "type": "TextSplitter",
                        "optional": true,
                        "id": "github_0-input-textSplitter-TextSplitter"
                    }
                ],
                "inputs": {
                    "repoLink": "https://github.com/Louvivien/test",
                    "branch": "main",
                    "textSplitter": ""
                },
                "outputAnchors": [
                    {
                        "id": "github_0-output-github-Document",
                        "name": "github",
                        "label": "Document",
                        "type": "Document"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "selected": false,
            "dragging": false,
            "positionAbsolute": {
                "x": 1067.7226985408345,
                "y": 2451.3724483358374
            }
        },
        {
            "width": 300,
            "height": 603,
            "id": "chainTool_1",
            "position": {
                "x": 1338.1467880741473,
                "y": 1672.4517017036264
            },
            "type": "customNode",
            "data": {
                "id": "chainTool_1",
                "label": "Chain Tool",
                "name": "chainTool",
                "type": "ChainTool",
                "baseClasses": [
                    "ChainTool",
                    "DynamicTool",
                    "Tool",
                    "StructuredTool",
                    "BaseLangChain"
                ],
                "category": "Tools",
                "description": "Use a chain as allowed tool for agent",
                "inputParams": [
                    {
                        "label": "Chain Name",
                        "name": "name",
                        "type": "string",
                        "placeholder": "state-of-union-qa",
                        "id": "chainTool_1-input-name-string"
                    },
                    {
                        "label": "Chain Description",
                        "name": "description",
                        "type": "string",
                        "rows": 3,
                        "placeholder": "State of the Union QA - useful for when you need to ask questions about the most recent state of the union address.",
                        "id": "chainTool_1-input-description-string"
                    },
                    {
                        "label": "Return Direct",
                        "name": "returnDirect",
                        "type": "boolean",
                        "optional": true,
                        "id": "chainTool_1-input-returnDirect-boolean"
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Base Chain",
                        "name": "baseChain",
                        "type": "BaseChain",
                        "id": "chainTool_1-input-baseChain-BaseChain"
                    }
                ],
                "inputs": {
                    "name": "code-tool",
                    "description": "code tool  - usefool to answer questions asked about code  or functions",
                    "returnDirect": "",
                    "baseChain": "{{retrievalQAChain_1.data.instance}}"
                },
                "outputAnchors": [
                    {
                        "id": "chainTool_1-output-chainTool-ChainTool|DynamicTool|Tool|StructuredTool|BaseLangChain",
                        "name": "chainTool",
                        "label": "ChainTool",
                        "type": "ChainTool | DynamicTool | Tool | StructuredTool | BaseLangChain"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "selected": false,
            "positionAbsolute": {
                "x": 1338.1467880741473,
                "y": 1672.4517017036264
            },
            "dragging": false
        },
        {
            "width": 300,
            "height": 281,
            "id": "retrievalQAChain_1",
            "position": {
                "x": 1988.8777166989175,
                "y": 1703.6062681916362
            },
            "type": "customNode",
            "data": {
                "id": "retrievalQAChain_1",
                "label": "RetrievalQA Chain",
                "name": "retrievalQAChain",
                "type": "RetrievalQAChain",
                "baseClasses": [
                    "RetrievalQAChain",
                    "BaseChain",
                    "BaseLangChain"
                ],
                "category": "Chains",
                "description": "QA chain to answer a question based on the retrieved documents",
                "inputParams": [],
                "inputAnchors": [
                    {
                        "label": "LLM",
                        "name": "llm",
                        "type": "BaseLLM",
                        "id": "retrievalQAChain_1-input-llm-BaseLLM"
                    },
                    {
                        "label": "Vector Store Retriever",
                        "name": "vectorStoreRetriever",
                        "type": "BaseRetriever",
                        "id": "retrievalQAChain_1-input-vectorStoreRetriever-BaseRetriever"
                    }
                ],
                "inputs": {
                    "llm": "{{openAI_1.data.instance}}",
                    "vectorStoreRetriever": "{{pineconeUpsert_0.data.instance}}"
                },
                "outputAnchors": [
                    {
                        "id": "retrievalQAChain_1-output-retrievalQAChain-RetrievalQAChain|BaseChain|BaseLangChain",
                        "name": "retrievalQAChain",
                        "label": "RetrievalQAChain",
                        "type": "RetrievalQAChain | BaseChain | BaseLangChain"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "selected": false,
            "dragging": false,
            "positionAbsolute": {
                "x": 1988.8777166989175,
                "y": 1703.6062681916362
            }
        },
        {
            "width": 300,
            "height": 526,
            "id": "openAI_1",
            "position": {
                "x": 2374.648167369435,
                "y": 1731.4477741736127
            },
            "type": "customNode",
            "data": {
                "id": "openAI_1",
                "label": "OpenAI",
                "name": "openAI",
                "type": "OpenAI",
                "baseClasses": [
                    "OpenAI",
                    "BaseLLM",
                    "BaseLanguageModel",
                    "BaseLangChain"
                ],
                "category": "LLMs",
                "description": "Wrapper around OpenAI large language models",
                "inputParams": [
                    {
                        "label": "OpenAI Api Key",
                        "name": "openAIApiKey",
                        "type": "password",
                        "id": "openAI_1-input-openAIApiKey-password"
                    },
                    {
                        "label": "Model Name",
                        "name": "modelName",
                        "type": "options",
                        "options": [
                            {
                                "label": "text-davinci-003",
                                "name": "text-davinci-003"
                            },
                            {
                                "label": "text-davinci-002",
                                "name": "text-davinci-002"
                            },
                            {
                                "label": "text-curie-001",
                                "name": "text-curie-001"
                            },
                            {
                                "label": "text-babbage-001",
                                "name": "text-babbage-001"
                            }
                        ],
                        "default": "text-davinci-003",
                        "optional": true,
                        "id": "openAI_1-input-modelName-options"
                    },
                    {
                        "label": "Temperature",
                        "name": "temperature",
                        "type": "number",
                        "default": 0.7,
                        "optional": true,
                        "id": "openAI_1-input-temperature-number"
                    },
                    {
                        "label": "Max Tokens",
                        "name": "maxTokens",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAI_1-input-maxTokens-number"
                    },
                    {
                        "label": "Top Probability",
                        "name": "topP",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAI_1-input-topP-number"
                    },
                    {
                        "label": "Best Of",
                        "name": "bestOf",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAI_1-input-bestOf-number"
                    },
                    {
                        "label": "Frequency Penalty",
                        "name": "frequencyPenalty",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAI_1-input-frequencyPenalty-number"
                    },
                    {
                        "label": "Presence Penalty",
                        "name": "presencePenalty",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAI_1-input-presencePenalty-number"
                    },
                    {
                        "label": "Batch Size",
                        "name": "batchSize",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAI_1-input-batchSize-number"
                    },
                    {
                        "label": "Timeout",
                        "name": "timeout",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAI_1-input-timeout-number"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "modelName": "text-davinci-003",
                    "temperature": 0.7,
                    "maxTokens": "",
                    "topP": "",
                    "bestOf": "",
                    "frequencyPenalty": "",
                    "presencePenalty": "",
                    "batchSize": "",
                    "timeout": ""
                },
                "outputAnchors": [
                    {
                        "id": "openAI_1-output-openAI-OpenAI|BaseLLM|BaseLanguageModel|BaseLangChain",
                        "name": "openAI",
                        "label": "OpenAI",
                        "type": "OpenAI | BaseLLM | BaseLanguageModel | BaseLangChain"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "selected": false,
            "positionAbsolute": {
                "x": 2374.648167369435,
                "y": 1731.4477741736127
            },
            "dragging": false
        },
        {
            "width": 300,
            "height": 703,
            "id": "pineconeUpsert_1",
            "position": {
                "x": 1743.6794519899813,
                "y": 2172.8258708690573
            },
            "type": "customNode",
            "data": {
                "id": "pineconeUpsert_1",
                "label": "Pinecone Upsert Document",
                "name": "pineconeUpsert",
                "type": "Pinecone",
                "baseClasses": [
                    "Pinecone",
                    "VectorStoreRetriever",
                    "BaseRetriever"
                ],
                "category": "Vector Stores",
                "description": "Upsert documents to Pinecone",
                "inputParams": [
                    {
                        "label": "Pinecone Api Key",
                        "name": "pineconeApiKey",
                        "type": "password",
                        "id": "pineconeUpsert_1-input-pineconeApiKey-password"
                    },
                    {
                        "label": "Pinecone Environment",
                        "name": "pineconeEnv",
                        "type": "string",
                        "id": "pineconeUpsert_1-input-pineconeEnv-string"
                    },
                    {
                        "label": "Pinecone Index",
                        "name": "pineconeIndex",
                        "type": "string",
                        "id": "pineconeUpsert_1-input-pineconeIndex-string"
                    },
                    {
                        "label": "Pinecone Namespace",
                        "name": "pineconeNamespace",
                        "type": "string",
                        "placeholder": "my-first-namespace",
                        "optional": true,
                        "id": "pineconeUpsert_1-input-pineconeNamespace-string"
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Document",
                        "name": "document",
                        "type": "Document",
                        "list": true,
                        "id": "pineconeUpsert_1-input-document-Document"
                    },
                    {
                        "label": "Embeddings",
                        "name": "embeddings",
                        "type": "Embeddings",
                        "id": "pineconeUpsert_1-input-embeddings-Embeddings"
                    }
                ],
                "inputs": {
                    "document": [
                        "{{pdfFile_1.data.instance}}",
                        "{{github_0.data.instance}}"
                    ],
                    "embeddings": "{{openAIEmbeddings_1.data.instance}}",
                    "pineconeEnv": "asia-southeast1-gcp",
                    "pineconeIndex": "doc-chat",
                    "pineconeNamespace": "pdf"
                },
                "outputAnchors": [
                    {
                        "name": "output",
                        "label": "Output",
                        "type": "options",
                        "options": [
                            {
                                "id": "pineconeUpsert_0-output-retriever-Pinecone|VectorStoreRetriever|BaseRetriever",
                                "name": "retriever",
                                "label": "Pinecone Retriever",
                                "type": "Pinecone | VectorStoreRetriever | BaseRetriever"
                            },
                            {
                                "id": "pineconeUpsert_0-output-vectorStore-Pinecone|VectorStore",
                                "name": "vectorStore",
                                "label": "Pinecone Vector Store",
                                "type": "Pinecone | VectorStore"
                            }
                        ],
                        "default": "retriever"
                    }
                ],
                "outputs": {
                    "output": "retriever"
                },
                "selected": false
            },
            "selected": false,
            "positionAbsolute": {
                "x": 1743.6794519899813,
                "y": 2172.8258708690573
            },
            "dragging": false
        },
        {
            "width": 300,
            "height": 331,
            "id": "openAIEmbeddings_1",
            "position": {
                "x": 2240.0777609563247,
                "y": 2492.7900957684815
            },
            "type": "customNode",
            "data": {
                "id": "openAIEmbeddings_1",
                "label": "OpenAI Embeddings",
                "name": "openAIEmbeddings",
                "type": "OpenAIEmbeddings",
                "baseClasses": [
                    "OpenAIEmbeddings",
                    "Embeddings"
                ],
                "category": "Embeddings",
                "description": "OpenAI API to generate embeddings for a given text",
                "inputParams": [
                    {
                        "label": "OpenAI Api Key",
                        "name": "openAIApiKey",
                        "type": "password",
                        "id": "openAIEmbeddings_1-input-openAIApiKey-password"
                    },
                    {
                        "label": "Strip New Lines",
                        "name": "stripNewLines",
                        "type": "boolean",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAIEmbeddings_1-input-stripNewLines-boolean"
                    },
                    {
                        "label": "Batch Size",
                        "name": "batchSize",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAIEmbeddings_1-input-batchSize-number"
                    },
                    {
                        "label": "Timeout",
                        "name": "timeout",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAIEmbeddings_1-input-timeout-number"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "stripNewLines": "",
                    "batchSize": "",
                    "timeout": ""
                },
                "outputAnchors": [
                    {
                        "id": "openAIEmbeddings_1-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings",
                        "name": "openAIEmbeddings",
                        "label": "OpenAIEmbeddings",
                        "type": "OpenAIEmbeddings | Embeddings"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "selected": false,
            "dragging": false,
            "positionAbsolute": {
                "x": 2240.0777609563247,
                "y": 2492.7900957684815
            }
        }
    ],
    "edges": [
        {
            "source": "serpAPI_0",
            "sourceHandle": "serpAPI_0-output-serpAPI-SerpAPI|Tool|StructuredTool|BaseLangChain",
            "target": "conversationalAgent_0",
            "targetHandle": "conversationalAgent_0-input-tools-Tool",
            "type": "buttonedge",
            "id": "serpAPI_0-serpAPI_0-output-serpAPI-SerpAPI|Tool|StructuredTool|BaseLangChain-conversationalAgent_0-conversationalAgent_0-input-tools-Tool",
            "data": {
                "label": ""
            }
        },
        {
            "source": "chatOpenAI_0",
            "sourceHandle": "chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|BaseLangChain",
            "target": "conversationalAgent_0",
            "targetHandle": "conversationalAgent_0-input-model-BaseChatModel",
            "type": "buttonedge",
            "id": "chatOpenAI_0-chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|BaseLangChain-conversationalAgent_0-conversationalAgent_0-input-model-BaseChatModel",
            "data": {
                "label": ""
            }
        },
        {
            "source": "bufferMemory_0",
            "sourceHandle": "bufferMemory_0-output-bufferMemory-BufferMemory|BaseChatMemory|BaseMemory",
            "target": "conversationalAgent_0",
            "targetHandle": "conversationalAgent_0-input-memory-BaseChatMemory",
            "type": "buttonedge",
            "id": "bufferMemory_0-bufferMemory_0-output-bufferMemory-BufferMemory|BaseChatMemory|BaseMemory-conversationalAgent_0-conversationalAgent_0-input-memory-BaseChatMemory",
            "data": {
                "label": ""
            }
        },
        {
            "source": "pineconeUpsert_0",
            "sourceHandle": "pineconeUpsert_0-output-retriever-Pinecone|VectorStoreRetriever|BaseRetriever",
            "target": "retrievalQAChain_0",
            "targetHandle": "retrievalQAChain_0-input-vectorStoreRetriever-BaseRetriever",
            "type": "buttonedge",
            "id": "pineconeUpsert_0-pineconeUpsert_0-output-retriever-Pinecone|VectorStoreRetriever|BaseRetriever-retrievalQAChain_0-retrievalQAChain_0-input-vectorStoreRetriever-BaseRetriever",
            "data": {
                "label": ""
            }
        },
        {
            "source": "openAI_0",
            "sourceHandle": "openAI_0-output-openAI-OpenAI|BaseLLM|BaseLanguageModel|BaseLangChain",
            "target": "retrievalQAChain_0",
            "targetHandle": "retrievalQAChain_0-input-llm-BaseLLM",
            "type": "buttonedge",
            "id": "openAI_0-openAI_0-output-openAI-OpenAI|BaseLLM|BaseLanguageModel|BaseLangChain-retrievalQAChain_0-retrievalQAChain_0-input-llm-BaseLLM",
            "data": {
                "label": ""
            }
        },
        {
            "source": "pdfFile_1",
            "sourceHandle": "pdfFile_1-output-pdfFile-Document",
            "target": "pineconeUpsert_0",
            "targetHandle": "pineconeUpsert_0-input-document-Document",
            "type": "buttonedge",
            "id": "pdfFile_1-pdfFile_1-output-pdfFile-Document-pineconeUpsert_0-pineconeUpsert_0-input-document-Document",
            "data": {
                "label": ""
            }
        },
        {
            "source": "recursiveCharacterTextSplitter_0",
            "sourceHandle": "recursiveCharacterTextSplitter_0-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter",
            "target": "pdfFile_1",
            "targetHandle": "pdfFile_1-input-textSplitter-TextSplitter",
            "type": "buttonedge",
            "id": "recursiveCharacterTextSplitter_0-recursiveCharacterTextSplitter_0-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter-pdfFile_1-pdfFile_1-input-textSplitter-TextSplitter",
            "data": {
                "label": ""
            }
        },
        {
            "source": "openAIEmbeddings_0",
            "sourceHandle": "openAIEmbeddings_0-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings",
            "target": "pineconeUpsert_0",
            "targetHandle": "pineconeUpsert_0-input-embeddings-Embeddings",
            "type": "buttonedge",
            "id": "openAIEmbeddings_0-openAIEmbeddings_0-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings-pineconeUpsert_0-pineconeUpsert_0-input-embeddings-Embeddings",
            "data": {
                "label": ""
            }
        },
        {
            "source": "chainTool_0",
            "sourceHandle": "chainTool_0-output-chainTool-ChainTool|DynamicTool|Tool|StructuredTool|BaseLangChain",
            "target": "conversationalAgent_0",
            "targetHandle": "conversationalAgent_0-input-tools-Tool",
            "type": "buttonedge",
            "id": "chainTool_0-chainTool_0-output-chainTool-ChainTool|DynamicTool|Tool|StructuredTool|BaseLangChain-conversationalAgent_0-conversationalAgent_0-input-tools-Tool",
            "data": {
                "label": ""
            }
        },
        {
            "source": "retrievalQAChain_0",
            "sourceHandle": "retrievalQAChain_0-output-retrievalQAChain-RetrievalQAChain|BaseChain|BaseLangChain",
            "target": "chainTool_0",
            "targetHandle": "chainTool_0-input-baseChain-BaseChain",
            "type": "buttonedge",
            "id": "retrievalQAChain_0-retrievalQAChain_0-output-retrievalQAChain-RetrievalQAChain|BaseChain|BaseLangChain-chainTool_0-chainTool_0-input-baseChain-BaseChain",
            "data": {
                "label": ""
            }
        },
        {
            "source": "retrievalQAChain_1",
            "sourceHandle": "retrievalQAChain_1-output-retrievalQAChain-RetrievalQAChain|BaseChain|BaseLangChain",
            "target": "chainTool_1",
            "targetHandle": "chainTool_1-input-baseChain-BaseChain",
            "type": "buttonedge",
            "id": "retrievalQAChain_1-retrievalQAChain_1-output-retrievalQAChain-RetrievalQAChain|BaseChain|BaseLangChain-chainTool_1-chainTool_1-input-baseChain-BaseChain",
            "data": {
                "label": ""
            }
        },
        {
            "source": "openAI_1",
            "sourceHandle": "openAI_1-output-openAI-OpenAI|BaseLLM|BaseLanguageModel|BaseLangChain",
            "target": "retrievalQAChain_1",
            "targetHandle": "retrievalQAChain_1-input-llm-BaseLLM",
            "type": "buttonedge",
            "id": "openAI_1-openAI_1-output-openAI-OpenAI|BaseLLM|BaseLanguageModel|BaseLangChain-retrievalQAChain_1-retrievalQAChain_1-input-llm-BaseLLM",
            "data": {
                "label": ""
            }
        },
        {
            "source": "pineconeUpsert_1",
            "sourceHandle": "pineconeUpsert_0-output-retriever-Pinecone|VectorStoreRetriever|BaseRetriever",
            "target": "retrievalQAChain_1",
            "targetHandle": "retrievalQAChain_1-input-vectorStoreRetriever-BaseRetriever",
            "type": "buttonedge",
            "id": "pineconeUpsert_1-pineconeUpsert_0-output-retriever-Pinecone|VectorStoreRetriever|BaseRetriever-retrievalQAChain_1-retrievalQAChain_1-input-vectorStoreRetriever-BaseRetriever",
            "data": {
                "label": ""
            }
        },
        {
            "source": "openAIEmbeddings_1",
            "sourceHandle": "openAIEmbeddings_1-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings",
            "target": "pineconeUpsert_1",
            "targetHandle": "pineconeUpsert_1-input-embeddings-Embeddings",
            "type": "buttonedge",
            "id": "openAIEmbeddings_1-openAIEmbeddings_1-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings-pineconeUpsert_1-pineconeUpsert_1-input-embeddings-Embeddings",
            "data": {
                "label": ""
            }
        },
        {
            "source": "github_0",
            "sourceHandle": "github_0-output-github-Document",
            "target": "pineconeUpsert_1",
            "targetHandle": "pineconeUpsert_1-input-document-Document",
            "type": "buttonedge",
            "id": "github_0-github_0-output-github-Document-pineconeUpsert_1-pineconeUpsert_1-input-document-Document",
            "data": {
                "label": ""
            }
        }
    ]
}